[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETStandard,Version=v2.0", FrameworkDisplayName="")]
namespace Sextant.Abstractions
{
    public interface IViewModelFactory
    {
        TViewModel Create<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TViewModel : Sextant.IViewModel;
    }
}
namespace Sextant
{
    public class DefaultViewModelFactory : Sextant.Abstractions.IViewModelFactory
    {
        public DefaultViewModelFactory() { }
        public TViewModel Create<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TViewModel : Sextant.IViewModel { }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public class static DependencyResolverMixins
    {
        public static string NavigationView { get; }
        public static Splat.IMutableDependencyResolver RegisterParameterViewStackService(this Splat.IMutableDependencyResolver dependencyResolver) { }
        public static Splat.IMutableDependencyResolver RegisterView<[System.Runtime.CompilerServices.NullableAttribute(0)]  TView, TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TView : ReactiveUI.IViewFor<TViewModel>, new ()
            where TViewModel :  class, Sextant.IViewModel { }
        public static Splat.IMutableDependencyResolver RegisterView<[System.Runtime.CompilerServices.NullableAttribute(0)]  TView, TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<ReactiveUI.IViewFor<TViewModel>> viewFactory, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TView : ReactiveUI.IViewFor
            where TViewModel :  class, Sextant.IViewModel { }
        public static Splat.IMutableDependencyResolver RegisterViewModel<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TViewModel : Sextant.IViewModel, new () { }
        public static Splat.IMutableDependencyResolver RegisterViewModel<TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<TViewModel> viewModelFactory, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TViewModel :  class, Sextant.IViewModel { }
        public static Splat.IMutableDependencyResolver RegisterViewModel<TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, TViewModel viewModel, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null)
            where TViewModel :  class, Sextant.IViewModel { }
        public static Splat.IMutableDependencyResolver RegisterViewModelFactory(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<Sextant.Abstractions.IViewModelFactory> factory) { }
        public static Splat.IMutableDependencyResolver RegisterViewStackService(this Splat.IMutableDependencyResolver dependencyResolver) { }
        public static Splat.IMutableDependencyResolver RegisterViewStackService<[System.Runtime.CompilerServices.NullableAttribute(0)]  T>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<Sextant.IView, T> factory)
            where T : Sextant.IViewStackService { }
    }
    public interface INavigable : Sextant.INavigated, Sextant.INavigating, Sextant.IViewModel { }
    public interface INavigated
    {
        System.IObservable<System.Reactive.Unit> WhenNavigatedFrom(Sextant.INavigationParameter parameter);
        System.IObservable<System.Reactive.Unit> WhenNavigatedTo(Sextant.INavigationParameter parameter);
    }
    public interface INavigating
    {
        System.IObservable<System.Reactive.Unit> WhenNavigatingTo(Sextant.INavigationParameter parameter);
    }
    public interface INavigationParameter : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.Generic.IDictionary<string, object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.IEnumerable { }
    [System.ObsoleteAttribute("Please use the IViewModel interface.")]
    public interface IPageViewModel : Sextant.IViewModel { }
    public interface IParameterViewStackService : Sextant.IViewStackService
    {
        System.IObservable<System.Reactive.Unit> PopPage(Sextant.INavigationParameter parameter, bool animate = True);
        System.IObservable<System.Reactive.Unit> PushModal(Sextant.INavigable modal, Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True);
        System.IObservable<System.Reactive.Unit> PushModal<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>(Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True)
            where TViewModel : Sextant.INavigable;
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.INavigable navigableViewModel, Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True);
        System.IObservable<System.Reactive.Unit> PushPage<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>(Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True)
            where TViewModel : Sextant.INavigable;
    }
    public interface IView
    {
        System.Reactive.Concurrency.IScheduler MainThreadScheduler { get; }
        [System.Runtime.CompilerServices.NullableAttribute(new byte[] {
                1,
                2})]
        System.IObservable<Sextant.IViewModel> PagePopped { get; }
        System.IObservable<System.Reactive.Unit> PopModal();
        System.IObservable<System.Reactive.Unit> PopPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PushModal(Sextant.IViewModel modalViewModel, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract, bool withNavigationPage = True);
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.IViewModel viewModel, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract, bool resetStack, bool animate = True);
    }
    public interface IViewModel
    {
        string Id { get; }
    }
    public interface IViewStackService
    {
        System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> ModalStack { get; }
        System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> PageStack { get; }
        Sextant.IView View { get; }
        System.IObservable<System.Reactive.Unit> PopModal(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PushModal(Sextant.IViewModel modal, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True);
        System.IObservable<System.Reactive.Unit> PushModal<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True)
            where TViewModel : Sextant.IViewModel;
        System.IObservable<System.Reactive.Unit> PushPage<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True)
            where TViewModel : Sextant.IViewModel;
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.IViewModel page, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True);
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.INavigable page, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True);
        System.IObservable<Sextant.IViewModel> TopModal();
        System.IObservable<Sextant.IViewModel> TopPage();
    }
    [System.Runtime.CompilerServices.NullableAttribute(new byte[] {
            0,
            1,
            1})]
    public class NavigationParameter : System.Collections.Generic.Dictionary<string, object>, Sextant.INavigationParameter, System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.Generic.IDictionary<string, object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.IEnumerable
    {
        public NavigationParameter() { }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public sealed class ParameterViewStackService : Sextant.ViewStackServiceBase, Sextant.IParameterViewStackService, Sextant.IViewStackService
    {
        public ParameterViewStackService(Sextant.IView view) { }
        public System.IObservable<System.Reactive.Unit> PopPage(Sextant.INavigationParameter parameter, bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PushModal(Sextant.INavigable navigableModal, Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True) { }
        public System.IObservable<System.Reactive.Unit> PushModal<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>(Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True)
            where TViewModel : Sextant.INavigable { }
        public System.IObservable<System.Reactive.Unit> PushPage(Sextant.INavigable navigableViewModel, Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PushPage<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>(Sextant.INavigationParameter parameter, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True)
            where TViewModel : Sextant.INavigable { }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public class Sextant
    {
        public Sextant() { }
        public static Sextant.Sextant Instance { get; }
        public Splat.IMutableDependencyResolver MutableLocator { get; }
    }
    public class static SextantExtensions
    {
        public static void Initialize(this Sextant.Sextant sextant) { }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public class static ViewModelFactory
    {
        public static Sextant.Abstractions.IViewModelFactory Current { get; }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public class ViewModelFactoryNotFoundException : System.Exception
    {
        public ViewModelFactoryNotFoundException() { }
        public ViewModelFactoryNotFoundException(string message) { }
        public ViewModelFactoryNotFoundException(string message, System.Exception innerException) { }
        protected ViewModelFactoryNotFoundException(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext) { }
    }
    public sealed class ViewStackService : Sextant.ViewStackServiceBase
    {
        public ViewStackService(Sextant.IView view) { }
    }
    [System.Runtime.CompilerServices.NullableAttribute(0)]
    public abstract class ViewStackServiceBase : Sextant.IViewStackService, Splat.IEnableLogger, System.IDisposable
    {
        protected ViewStackServiceBase(Sextant.IView view) { }
        protected Splat.IFullLogger Logger { get; }
        public System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> ModalStack { get; }
        protected System.Reactive.Subjects.BehaviorSubject<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> ModalSubject { get; }
        public System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> PageStack { get; }
        protected System.Reactive.Subjects.BehaviorSubject<System.Collections.Immutable.IImmutableList<Sextant.IViewModel>> PageSubject { get; }
        public Sextant.IView View { get; }
        protected static void AddToStackAndTick<[System.Runtime.CompilerServices.NullableAttribute(2)]  T>(System.Reactive.Subjects.BehaviorSubject<System.Collections.Immutable.IImmutableList<T>> stackSubject, T item, bool reset) { }
        public void Dispose() { }
        protected virtual void Dispose(bool disposing) { }
        public System.IObservable<System.Reactive.Unit> PopModal(bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PopPage(bool animate = True) { }
        protected static void PopRootAndTick<[System.Runtime.CompilerServices.NullableAttribute(2)]  T>(System.Reactive.Subjects.BehaviorSubject<System.Collections.Immutable.IImmutableList<T>> stackSubject) { }
        protected static T PopStackAndTick<[System.Runtime.CompilerServices.NullableAttribute(2)]  T>(System.Reactive.Subjects.BehaviorSubject<System.Collections.Immutable.IImmutableList<T>> stackSubject) { }
        public System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PushModal(Sextant.IViewModel modal, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True) { }
        public System.IObservable<System.Reactive.Unit> PushModal<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool withNavigationPage = True)
            where TViewModel : Sextant.IViewModel { }
        public System.IObservable<System.Reactive.Unit> PushPage<[System.Runtime.CompilerServices.NullableAttribute(0)]  TViewModel>([System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True)
            where TViewModel : Sextant.IViewModel { }
        public System.IObservable<System.Reactive.Unit> PushPage(Sextant.IViewModel viewModel, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PushPage(Sextant.INavigable viewModel, [System.Runtime.CompilerServices.NullableAttribute(2)] string contract = null, bool resetStack = False, bool animate = True) { }
        public System.IObservable<Sextant.IViewModel> TopModal() { }
        public System.IObservable<Sextant.IViewModel> TopPage() { }
    }
}
namespace System.Reactive.Linq
{
    public class static SubscribeSafeExtensions { }
    public class static ToSignalExtension { }
    public class static WhereNotNullExtension { }
}