[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.6.1", FrameworkDisplayName=".NET Framework 4.6.1")]
namespace Sextant
{
    public class static DependencyResolverMixins
    {
        public static string NavigationView { get; }
        public static Splat.IMutableDependencyResolver RegisterView<TView, TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, string contract = null)
            where TView : ReactiveUI.IViewFor<>, new ()
            where TViewModel :  class, Sextant.IPageViewModel { }
        public static Splat.IMutableDependencyResolver RegisterView<TView, TViewModel>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<ReactiveUI.IViewFor<TViewModel>> viewFactory, string contract = null)
            where TView : ReactiveUI.IViewFor
            where TViewModel :  class, Sextant.IPageViewModel { }
        public static Splat.IMutableDependencyResolver RegisterViewStackService(this Splat.IMutableDependencyResolver dependencyResolver) { }
        public static Splat.IMutableDependencyResolver RegisterViewStackService<T>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<Sextant.IView, T> factory)
            where T : Sextant.IViewStackService { }
    }
    public interface IPageViewModel
    {
        string Id { get; }
    }
    public interface IView
    {
        System.IObservable<Sextant.IPageViewModel> PagePopped { get; }
        System.IObservable<System.Reactive.Unit> PopModal();
        System.IObservable<System.Reactive.Unit> PopPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PushModal(Sextant.IPageViewModel modalViewModel, string contract);
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.IPageViewModel pageViewModel, string contract, bool resetStack, bool animate = True);
    }
    public interface IViewStackService
    {
        System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IPageViewModel>> ModalStack { get; }
        System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IPageViewModel>> PageStack { get; }
        Sextant.IView View { get; }
        System.IObservable<System.Reactive.Unit> PopModal(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True);
        System.IObservable<System.Reactive.Unit> PushModal(Sextant.IPageViewModel modal, string contract = null);
        System.IObservable<System.Reactive.Unit> PushPage(Sextant.IPageViewModel page, string contract = null, bool resetStack = False, bool animate = True);
        System.IObservable<Sextant.IPageViewModel> TopModal();
        System.IObservable<Sextant.IPageViewModel> TopPage();
    }
    public class Sextant
    {
        public Sextant() { }
        public static Sextant.Sextant Instance { get; }
        public Splat.IMutableDependencyResolver MutableLocator { get; }
    }
    public class static SextantExtensions
    {
        public static void Initialize(this Sextant.Sextant sextant) { }
    }
    public sealed class ViewStackService : Sextant.IViewStackService, Splat.IEnableLogger, System.IDisposable
    {
        public ViewStackService(Sextant.IView view) { }
        public System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IPageViewModel>> ModalStack { get; }
        public System.IObservable<System.Collections.Immutable.IImmutableList<Sextant.IPageViewModel>> PageStack { get; }
        public Sextant.IView View { get; }
        public void Dispose() { }
        public System.IObservable<System.Reactive.Unit> PopModal(bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PopPage(bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate = True) { }
        public System.IObservable<System.Reactive.Unit> PushModal(Sextant.IPageViewModel modal, string contract = null) { }
        public System.IObservable<System.Reactive.Unit> PushPage(Sextant.IPageViewModel page, string contract = null, bool resetStack = False, bool animate = True) { }
        public System.IObservable<Sextant.IPageViewModel> TopModal() { }
        public System.IObservable<Sextant.IPageViewModel> TopPage() { }
    }
}
namespace System.Reactive.Linq
{
    public class static SubscribeSafeExtensions { }
    public class static ToSignalExtension { }
    public class static WhereNotNullExtension { }
}