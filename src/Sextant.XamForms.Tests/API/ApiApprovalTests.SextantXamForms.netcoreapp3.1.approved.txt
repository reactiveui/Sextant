[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/reactiveui/sextant")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")]
namespace Sextant.XamForms
{
    public abstract class BehaviorBase<T> : Xamarin.Forms.Behavior<T>, System.IDisposable
        where T : Xamarin.Forms.BindableObject
    {
        protected BehaviorBase() { }
        protected System.Reactive.Disposables.CompositeDisposable BehaviorDisposable { get; }
        public void Dispose() { }
        protected virtual void Dispose(bool disposing) { }
        protected override void OnAttachedTo(T bindable) { }
        protected override void OnDetachingFrom(T bindable) { }
    }
    public static class DependencyResolverMixins
    {
        public static string NavigationView { get; }
        public static Sextant.XamForms.NavigationView? GetNavigationView(this Splat.IReadonlyDependencyResolver dependencyResolver, string? contract = null) { }
        public static Splat.IMutableDependencyResolver RegisterNavigationView(this Splat.IMutableDependencyResolver dependencyResolver) { }
        public static Splat.IMutableDependencyResolver RegisterNavigationView(this Splat.IMutableDependencyResolver dependencyResolver, System.Reactive.Concurrency.IScheduler mainThreadScheduler, System.Reactive.Concurrency.IScheduler backgroundScheduler) { }
        public static Splat.IMutableDependencyResolver RegisterNavigationView<TView>(this Splat.IMutableDependencyResolver dependencyResolver, System.Func<TView> navigationViewFactory)
            where TView : Sextant.IView { }
    }
    public sealed class NavigationPageSystemPopBehavior : Sextant.XamForms.BehaviorBase<Xamarin.Forms.NavigationPage>
    {
        public NavigationPageSystemPopBehavior(System.IObservable<Sextant.XamForms.NavigationSource> navigationSource) { }
        protected override void OnAttachedTo(Xamarin.Forms.NavigationPage bindable) { }
    }
    public enum NavigationSource
    {
        Device = 0,
        NavigationService = 1,
    }
    public class NavigationView : Xamarin.Forms.NavigationPage, Sextant.IView, Splat.IEnableLogger
    {
        public NavigationView() { }
        public NavigationView(System.Reactive.Concurrency.IScheduler mainScheduler, System.Reactive.Concurrency.IScheduler backgroundScheduler, ReactiveUI.IViewLocator viewLocator) { }
        public NavigationView(System.Reactive.Concurrency.IScheduler mainScheduler, System.Reactive.Concurrency.IScheduler backgroundScheduler, ReactiveUI.IViewLocator viewLocator, Xamarin.Forms.Page rootPage) { }
        public System.Reactive.Concurrency.IScheduler MainThreadScheduler { get; }
        public System.IObservable<Sextant.IViewModel> PagePopped { get; }
        public System.IObservable<System.Reactive.Unit> PopModal() { }
        public System.IObservable<System.Reactive.Unit> PopPage(bool animate) { }
        public System.IObservable<System.Reactive.Unit> PopToRootPage(bool animate) { }
        public System.IObservable<System.Reactive.Unit> PushModal(Sextant.IViewModel modalViewModel, string? contract, bool withNavigationPage = true) { }
        public System.IObservable<System.Reactive.Unit> PushPage(Sextant.IViewModel viewModel, string? contract, bool resetStack, bool animate) { }
    }
    public static class SextantExtensions
    {
        public static void InitializeForms(this Sextant.Sextant sextant) { }
    }
}